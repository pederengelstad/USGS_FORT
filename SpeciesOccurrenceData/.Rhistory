test2$meta[[0]]
test2$meta
unlist(test2$meta)[[7,4]]
unlist(test2$meta)[[c(6,7]]
unlist(test2$meta)[[c(6,7)]]
unlist(test2$meta)[[6 7]]
n = c(6,7)
unlist(test2$meta)[[n]]
class(test2$meta)
unlist(test2$meta)[n]
test2$meta[7]
unlist(test2$meta)[c(6,7)]
unlist(test2$meta)[c(6,7)][1]
unlist(test2$meta)[c(6,7),]
unlist(test2$meta)[c(6,7)][[1]]
unlist(test2$meta)[c(6,7)][[1:2]]
unlist(test2$meta)[c(6,7)]
unlist(test2$meta)[c(7,14)]
u = unlist(test2$meta)[c(7,14)]
u[1]
unique(unlist(u))
unique(u)
u = unique(unlist(test2$meta)[c(7,14)])
unique(unlist(test2$meta)[c(7,14)])
unlist(test2$meta)[c(7,14, 21, 28)]
test2$meta
unlist(test2$meta)[c(7,14, 20, 28)]
unlist(test2$meta)[c(7,14, 20, 28, 33)]
unlist(test2$meta)[c(7,14, 24, 28, 33)]
unlist(test2$meta)[c(7,14, 25, 28, 33)]
unlist(test2$meta)[c(7,14, 25, 35, 33)]
test = occ(c("Hieracium caespitosum","Bromus tectorum", "Aegopodium podagraria"), from=c('gbif','bison','inat', 'ecoengine'), limit = 5, has_coords = TRUE, date = c(startdate,enddate))
test2 = occ2df(test, what = 'all')
test2$meta
unlist(test2$meta)[c(7,14, 25, 35, 33)]
unlist(test2$meta)[c(7,14, 25, 35)]
test = occ(c("Hieracium caespitosum","Bromus tectorum", "Aegopodium podagraria"), from=c('gbif','bison','inat'), limit = 5, has_coords = TRUE, date = c(startdate,enddate))
test2 = occ2df(test, what = 'all')
unlist(test2$meta)[c(7,14, 25, 35)]
unique(unlist(test2$meta)[c(7,14, 25, 35)])
unique(unlist(!is.na(test2$meta))[c(7,14, 25, 35)])
unique(na.omit(unlist(test2$meta)[c(7,14, 25, 35)]))
eddmaps_call$rows$scientificname
eddmaps_call
api_sources = c("eddmaps")          #options: gbif, bison, inat, ecoengine, eddmaps
api_data(species_list = c("Hieracium caespitosum","Bromus tectorum", "Aegopodium podagraria")
, sources = api_sources
, startDate = startdate
, endDate = enddate
, bisonopts = list(limit=5000)
, gbifopts = list(limit=5000)
)# 7 min searching 36 species in BISON, GBIF and EDDMapS (1000 record limit/species)
eddmaps_call
source('USGS/Scripts/R/Required/API_Sources.R')
api_data(species_list = c("Hieracium caespitosum","Bromus tectorum", "Aegopodium podagraria")
, sources = api_sources
, startDate = startdate
, endDate = enddate
, bisonopts = list(limit=5000)
, gbifopts = list(limit=5000)
)# 7 min searching 36 species in BISON, GBIF and EDDMapS (1000 record limit/species)
eddmaps_call
# Query data available from API
df_list <- list()
test2 = occ2df(test, what = 'all')
test_format <- as.data.frame(test2$data) %>%
mutate(scientificName = unique(na.omit(unlist(test2$meta)[c(7,14, 25, 35)])))
test_format
test2 = occ2df(test, what = 'all')
test
test2 = occ2df(test, what = 'all')
test2
test2
for (i in c("Hieracium caespitosum","Bromus tectorum", "Aegopodium podagraria")){
test_loop = occ(i, from=c('gbif','bison','inat'), limit = 5, has_coords = TRUE, date = c(startdate,enddate))
test_df = occ2df(test_loop, what='all')
test_format = as.data.frame(test_df$data) %>%
select(prov) %>%
mutate(scientificName = unique(na.omit(unlist(test2$meta)[c(7,14, 25, 35)])))
df_loop = bind_rows(df_loop, test_format)
}
df_loop
df_loop = data.frame()
for (i in c("Hieracium caespitosum","Bromus tectorum", "Aegopodium podagraria")){
test_loop = occ(i, from=c('gbif','bison','inat'), limit = 5, has_coords = TRUE, date = c(startdate,enddate))
test_df = occ2df(test_loop, what='all')
test_format = as.data.frame(test_df$data) %>%
select(prov) %>%
mutate(scientificName = unique(na.omit(unlist(test2$meta)[c(7,14, 25, 35)])))
df_loop = bind_rows(df_loop, test_format)
}
df_loop
df_loop = data.frame()
for (i in c("Hieracium caespitosum","Bromus tectorum", "Aegopodium podagraria")){
test_loop = occ(i, from=c('gbif','inat'), limit = 5, has_coords = TRUE, date = c(startdate,enddate))
test_df = occ2df(test_loop, what='all')
test_format = as.data.frame(test_df$data) %>%
select(prov,name) %>%
mutate(scientificName = unique(na.omit(unlist(test2$meta)[c(7,14, 25, 35)])))
df_loop = bind_rows(df_loop, test_format)
}
df_loop
for (i in c("Hieracium caespitosum","Bromus tectorum", "Aegopodium podagraria")){
print(i)
test_loop = occ(i, from=c('gbif','inat'), limit = 5, has_coords = TRUE, date = c(startdate,enddate))
test_df = occ2df(test_loop, what='all')
test_format = as.data.frame(test_df$data) %>%
select(prov,name) %>%
mutate(scientificName = unique(na.omit(unlist(test2$meta)[c(7,14, 25, 35)])))
df_loop = bind_rows(df_loop, test_format)
}
df_loop
df_loop = data.frame()
for (i in c("Hieracium caespitosum","Bromus tectorum", "Aegopodium podagraria")){
print(i)
test_loop = occ(i, from=c('gbif','inat'), limit = 5, has_coords = TRUE, date = c(startdate,enddate))
test_df = occ2df(test_loop, what='all')
test_format = as.data.frame(test_df$data) %>%
select(prov,name) %>%
mutate(scientificName = unique(na.omit(unlist(test_df$meta)[c(7,14, 25, 35)])))
df_loop = bind_rows(df_loop, test_format)
}
df_loop = data.frame()
for (i in c("Hieracium caespitosum","Bromus tectorum", "Aegopodium podagraria")){
print(i)
test_loop = occ(i, from=c('gbif','inat'), limit = 5, has_coords = TRUE, date = c(startdate,enddate))
test_df = occ2df(test_loop, what='all')
test_format = as.data.frame(test_df$data) %>%
select(prov,name) %>%
mutate(scientificName = unique(na.omit(unlist(test_df$meta)[c(7,14, 25, 35)])))
df_loop = rbind(df_loop, test_format)
}
class(test_format)
df_loop = data.frame()
for (i in c("Hieracium caespitosum","Bromus tectorum", "Aegopodium podagraria")){
print(i)
test_loop = occ(i, from=c('gbif','inat'), limit = 5, has_coords = TRUE, date = c(startdate,enddate))
test_df = occ2df(test_loop, what='all')
test_format = as.data.frame(test_df$data) %>%
select(prov,name) %>%
mutate(scientificName = unique(na.omit(unlist(test_df$meta)[c(7,14, 25, 35)])))
df_loop = merge.data.frame(df_loop, test_format)
}
df_loop = data.frame()
for (i in c("Hieracium caespitosum","Bromus tectorum", "Aegopodium podagraria")){
print(i)
test_loop = occ(i, from=c('gbif','inat'), limit = 5, has_coords = TRUE, date = c(startdate,enddate))
test_df = occ2df(test_loop, what='all')
test_format = as.data.frame(test_df$data) %>%
select(prov,name) %>%
mutate(scientificName = unique(na.omit(unlist(test_df$meta)[c(7,14, 25, 35)])))
df_loop = merge.data.frame(df_loop, test_format, all.x = T)
}
df_loop = data.frame()
for (i in c("Hieracium caespitosum","Bromus tectorum", "Aegopodium podagraria")){
print(i)
test_loop = occ(i, from=c('gbif','inat'), limit = 5, has_coords = TRUE, date = c(startdate,enddate))
test_df = occ2df(test_loop, what='all')
test_format = as.data.frame(test_df$data) %>%
select(prov,name) %>%
mutate(scientificName = unique(na.omit(unlist(test_df$meta)[c(7,14, 25, 35)])))
df_loop = merge.data.frame(df_loop, test_format, all = T)
}
df_loop = data.frame()
for (i in c("Hieracium caespitosum","Bromus tectorum", "Aegopodium podagraria")){
print(i)
test_loop = occ(i, from=c('gbif','inat'), limit = 5, has_coords = TRUE, date = c(startdate,enddate))
test_df = occ2df(test_loop, what='all')
test_format = as.data.frame(test_df$data) %>%
select(prov,name) %>%
mutate(scientificName = unique(na.omit(unlist(test_df$meta)[c(7,14, 25, 35)])))
df_loop = dplyr::bind_rows(df_loop, test_format)
}
df_loop = data.frame()
for (i in c("Hieracium caespitosum","Bromus tectorum", "Aegopodium podagraria")){
print(i)
test_loop = occ(i, from=c('gbif','inat'), limit = 5, has_coords = TRUE, date = c(startdate,enddate))
test_df = occ2df(test_loop, what='all')
test_format = as.data.frame(test_df$data) %>%
select(prov,name) %>%
mutate(scientificName = unique(na.omit(unlist(test_df$meta)[c(7,14, 25, 35)])))
df_loop = rbind(list(df_loop, test_format))
}
df_loop = data.frame()
for (i in c("Hieracium caespitosum","Bromus tectorum", "Aegopodium podagraria")){
print(i)
test_loop = occ(i, from=c('gbif','inat'), limit = 5, has_coords = TRUE, date = c(startdate,enddate))
test_df = occ2df(test_loop, what='all')
test_format = as.data.frame(test_df$data) %>%
select(prov,name) %>%
mutate(scientificName = unique(na.omit(unlist(test_df$meta)[c(7,14, 25, 35)])))
df_loop = merge(df_loop, test_format)
}
df_loop = list()
df_loop = list()
for (i in c("Hieracium caespitosum","Bromus tectorum", "Aegopodium podagraria")){
print(i)
test_loop = occ(i, from=c('gbif','inat'), limit = 5, has_coords = TRUE, date = c(startdate,enddate))
test_df = occ2df(test_loop, what='all')
test_format = as.data.frame(test_df$data) %>%
select(prov,name) %>%
mutate(scientificName = unique(na.omit(unlist(test_df$meta)[c(7,14, 25, 35)])))
df_loop = bind_rows(df_loop, test_format)
}
df_loop = data.frame()
View(df_loop)
?merge()
df_loop = data.frame()
for (i in c("Hieracium caespitosum","Bromus tectorum", "Aegopodium podagraria")){
print(i)
test_loop = occ(i, from=c('gbif','inat'), limit = 5, has_coords = TRUE, date = c(startdate,enddate))
test_df = occ2df(test_loop, what='all')
test_format = as.data.frame(test_df$data) %>%
select(prov,name) %>%
mutate(scientificName = unique(na.omit(unlist(test_df$meta)[c(7,14, 25, 35)])))
df_loop = merge(df_loop, test_format, all=T, all.x=T, all.y=T)
}
for (i in c("Hieracium caespitosum","Bromus tectorum", "Aegopodium podagraria")){
print(i)
test_loop = occ(i, from=c('gbif','inat'), limit = 5, has_coords = TRUE, date = c(startdate,enddate))
test_df = occ2df(test_loop, what='all')
test_format = as.data.frame(test_df$data) %>%
select(prov,name) %>%
mutate(scientificName = unique(na.omit(unlist(test_df$meta)[c(7,14, 25, 35)])))
df_loop <- merge(df_loop, test_format, all=T, all.x=T, all.y=T)
}
df_loop = list()
class(test_format)
df_loop = data.frame()
for (i in c("Hieracium caespitosum","Bromus tectorum", "Aegopodium podagraria")){
print(i)
test_loop = occ(i, from=c('gbif','inat'), limit = 5, has_coords = TRUE, date = c(startdate,enddate))
test_df = occ2df(test_loop, what='all')
test_format = as.data.frame(test_df$data) %>%
select(prov,name) %>%
mutate(scientificName = unique(na.omit(unlist(test_df$meta)[c(7,14, 25, 35)])))
df_loop <- cbind(df_loop, test_format)
}
df_loop = data.frame()
for (i in c("Hieracium caespitosum","Bromus tectorum", "Aegopodium podagraria")){
print(i)
test_loop = occ(i, from=c('gbif','inat'), limit = 5, has_coords = TRUE, date = c(startdate,enddate))
test_df = occ2df(test_loop, what='all')
test_format = as.data.frame(test_df$data) %>%
select(prov,name) %>%
mutate(scientificName = unique(na.omit(unlist(test_df$meta)[c(7,14, 25, 35)])))
print(test_format)
df_loop <- cbind(df_loop, test_format)
}
df_loop = data.frame()
for (i in c("Hieracium caespitosum","Bromus tectorum", "Aegopodium podagraria")){
print(i)
test_loop = occ(i, from=c('gbif','inat'), limit = 5, has_coords = TRUE, date = c(startdate,enddate))
test_df = occ2df(test_loop, what='all')
test_format = as.data.frame(test_df$data) %>%
select(prov,name) %>%
mutate(scientificName = unique(na.omit(unlist(test_df$meta)[c(7,14, 25, 35)])))
print(test_format)
# df_loop <- cbind(df_loop, test_format)
}
for (i in c("Hieracium caespitosum","Bromus tectorum", "Aegopodium podagraria")){
print(i)
test_loop = occ(i, from=c('gbif','inat'), limit = 5, has_coords = TRUE, date = c(startdate,enddate))
test_df = occ2df(test_loop, what='all')
unique(na.omit(unlist(test_df$meta)[c(7,14, 25, 35)]))
# test_format = as.data.frame(test_df$data) %>%
#   select(prov,name) %>%
#   mutate(scientificName = unique(na.omit(unlist(test_df$meta)[c(7,14, 25, 35)])))
# print(test_format)
# df_loop <- cbind(df_loop, test_format)
}
for (i in c("Hieracium caespitosum","Bromus tectorum", "Aegopodium podagraria")){
print(i)
test_loop = occ(i, from=c('gbif','inat'), limit = 5, has_coords = TRUE, date = c(startdate,enddate))
test_df = occ2df(test_loop, what='all')
print(unique(na.omit(unlist(test_df$meta)[c(7,14, 25, 35)])))
# test_format = as.data.frame(test_df$data) %>%
#   select(prov,name) %>%
#   mutate(scientificName = unique(na.omit(unlist(test_df$meta)[c(7,14, 25, 35)])))
# print(test_format)
# df_loop <- cbind(df_loop, test_format)
}
test_df$meta
test_df$meta['$opts$query']
test_df$meta[3]['$opts$query']
unlist(test_df$meta)
unlist(test_df$meta)['opts.scientificName']
unlist(test_df$meta)['*Name']
word(unlist(test_df$meta),1,2," ")
df_loop = data.frame()
for (i in c("Hieracium caespitosum","Bromus tectorum", "Aegopodium podagraria")){
print(i)
test_loop = occ(i, from=c('gbif','inat'), limit = 5, has_coords = TRUE, date = c(startdate,enddate))
test_df = occ2df(test_loop, what='all')
print(unique(na.omit(word(unlist(test_df$meta),1,2," "))))
# test_format = as.data.frame(test_df$data) %>%
#   select(prov,name) %>%
#   mutate(scientificName = unique(na.omit(unlist(test_df$meta)[c(7,14, 25, 35)])))
# print(test_format)
# df_loop <- cbind(df_loop, test_format)
}
test = occ(c("Hieracium caespitosum","Bromus tectorum", "Aegopodium podagraria"), from=c('gbif','bison','inat'), limit = 5, has_coords = TRUE, date = c(startdate,enddate))
unlist(test)
test[1]
test[1:2]
test$gbif$meta$opts$scientificName
test$bison$meta$opts$callopts
test$bison$meta$opts$callopts[[1]]
test$bison$meta$opts$callopts[1]
test$bison$meta$opts$callopts[2]
test$bison$meta$type
test$bison$meta$opts
test$bison$meta$opts[[1]]
test$gbif$meta$opts[[1]]
test$ecoengine$meta$opts
test = occ(c("Hieracium caespitosum","Bromus tectorum", "Aegopodium podagraria"), from=c('gbif','bison','inat','ecoengine'), limit = 5, has_coords = TRUE, date = c(startdate,enddate))
test$gbif$meta$opts
test$gbif$meta$opts[[2]]
test$inat$meta$opts$callopts[[1]]
test$inat$meta$opts
test$inat$meta$opts[[2]]
for (i in c("Hieracium caespitosum","Bromus tectorum", "Aegopodium podagraria")){
print(i)
test_loop = occ(i, from=c('gbif','inat'), limit = 5, has_coords = TRUE, date = c(startdate,enddate))
test_df = occ2df(test_loop, what='all')
print(unique(na.omit(word(unlist(test_df$meta),1,2," "))))
# test_format = as.data.frame(test_df$data) %>%
#   select(prov,name) %>%
#   mutate(scientificName = unique(na.omit(unlist(test_df$meta)[c(7,14, 25, 35)])))
# print(test_format)
# df_loop <- cbind(df_loop, test_format)
}
for (i in species_list){
print(i)
test_loop = occ(i, from=c('gbif','inat'), limit = 5, has_coords = TRUE, date = c(startdate,enddate))
test_df = occ2df(test_loop, what='all')
print(unique(na.omit(word(unlist(test_df$meta),1,2," "))))
# test_format = as.data.frame(test_df$data) %>%
#   select(prov,name) %>%
#   mutate(scientificName = unique(na.omit(unlist(test_df$meta)[c(7,14, 25, 35)])))
# print(test_format)
# df_loop <- cbind(df_loop, test_format)
}
df_loop = data.frame()
for (i in species_list){
print(i)
test_loop = occ(i, from=c('gbif','inat'), limit = 5, has_coords = TRUE, date = c(startdate,enddate))
test_df = occ2df(test_loop, what='all')
print(unique(na.omit(word(unlist(test_df$meta),1,2," "))))
test_format = as.data.frame(test_df$data) %>%
select(prov,name) %>%
mutate(scientificName = unique(na.omit(unlist(test_df$meta)[c(7,14, 25, 35)])))
print(test_format)
df_loop <- bind_rows(df_loop, test_format)
}
df_loop = data.frame()
for (i in species_list){
print(i)
test_loop = occ(i, from=c('gbif','inat'), limit = 5, has_coords = TRUE, date = c(startdate,enddate))
test_df = occ2df(test_loop, what='all')
print(unique(na.omit(word(unlist(test_df$meta),1,2," "))))
test_format = as.data.frame(test_df$data) %>%
select(prov,name) %>%
mutate(scientificName = unique(na.omit(unlist(test_df$meta)[c(7,14, 25, 35)])))
print(test_format)
# df_loop <- bind_rows(df_loop, test_format)
}
df_loop = data.frame()
for (i in species_list){
print(i)
test_loop = occ(i, from=c('gbif','inat'), limit = 5, has_coords = TRUE, date = c(startdate,enddate))
test_df = occ2df(test_loop, what='all')
print(unique(na.omit(word(unlist(test_df$meta),1,2," "))))
test_format = as.data.frame(test_df$data) %>%
select(prov,name) %>%
mutate(scientificName = unique(na.omit(word(unlist(test_df$meta),1,2," "))))
print(test_format)
# df_loop <- bind_rows(df_loop, test_format)
}
df_loop = data.frame()
for (i in species_list){
print(i)
test_loop = occ(i, from=c('gbif','inat'), limit = 5, has_coords = TRUE, date = c(startdate,enddate))
test_df = occ2df(test_loop, what='all')
print(unique(na.omit(word(unlist(test_df$meta),1,2," "))))
test_format = as.data.frame(test_df$data) %>%
select(prov,name) %>%
mutate(scientificName = unique(na.omit(word(unlist(test_df$meta),1,2," "))))
print(test_format)
df_loop <- bind_rows(df_loop, test_format)
}
df_loop
test2 = occ2df(test)
test = occ(c("Hieracium caespitosum","Bromus tectorum", "Aegopodium podagraria"), from=c('gbif','bison','inat','ecoengine'), limit = 5, has_coords = TRUE, date = c(startdate,enddate))
test2 = occ2df(test)
test2 = occ2df(test, what='all')
test = occ(c("Hieracium caespitosum","Bromus tectorum", "Aegopodium podagraria"), from=c('gbif','bison','inat','ecoengine'), limit = 5, has_coords = TRUE, date = c(startdate,enddate))
test2 = occ2df(test, what='all')
test3 = as.data.frame(test)
test = occ(c("Hieracium caespitosum","Bromus tectorum", "Aegopodium podagraria"), from=c('gbif','bison','inat','ecoengine'), limit = 5, has_coords = TRUE, date = c(startdate,enddate))
test3 = as.data.frame(test)
test3 = as.data.frame(test$gbif$data[1:3])
testing_df = occ(c("Hieracium caespitosum","Bromus tectorum", "Aegopodium podagraria"), from=c('gbif','bison','inat','ecoengine'), limit = 5, has_coords = TRUE, date = c(startdate,enddate))
test3 = as.data.frame(test$gbif$data[1:3])
test3
testing_df$gbif$data$Hieracium_caespitosum$genericName
testing_df
testing_df = occ(c("Hieracium caespitosum","Bromus tectorum", "Aegopodium podagraria"), from=c('gbif','bison','inat','ecoengine'), limit = 5, has_coords = TRUE, date = c(startdate,enddate))
testing_df
testing_df$gbif$data$Hieracium_caespitosum$genericName
testing_df$gbif$data$Hieracium_caespitosum$name
testing_df$gbif$data$Hieracium_caespitosum$scientificName
testing_df = occ(c("Hieracium caespitosum","Bromus tectorum", "Aegopodium podagraria"), from=c('gbif','bison','inat','ecoengine'), limit = 5, has_coords = TRUE, date = c(startdate,enddate))
testing_df$gbif$data$Hieracium_caespitosum$scientificName
testing_df$ebird$data$Hieracium_caespitosum
testing_df
df_loop = data.frame()
library(stringr)
library(tidyverse)
# read in hard copy of USDA plants database (full)
dat <- read.csv('C:/Users/peder/Documents/USGS/Data/Tabular/USDA_FULL_LIST.txt')
# read in hard copy of USDA plants database (full)
dat <- read.csv('D:/Users/peder/Documents/USGS/Data/Tabular/USDA_FULL_LIST.txt')
# read in hard copy of USDA plants database (full)
dat <- read.csv('D:/USGS/Data/Tabular/USDA_FULL_LIST.txt')
USDAexotic <- dat[grep('L48(I)', dat$Native.Status, fixed=TRUE),] # rolling count: 5100
# drop the 1 word names:
USDAexotic <- USDAexotic[str_count(USDAexotic$Scientific.Name, "\\s") != 0, ] # rolling count 4249
# drop all ssp and var. terms (only want Genus and species)
USDAexotic$Scientific.Name <- word(string = USDAexotic$Scientific.Name, start = 1, end = 2, sep = " ")
## Remove names without the special x character denoting hybrids
USDAexotic <- USDAexotic[!str_detect(string = USDAexotic$Scientific.Name, pattern = 'Ã-'),] # rolling count: 4120
# De-duplicate names
USDAexotic = USDAexotic[-which(duplicated(USDAexotic$Scientific.Name)), ] # count: 3774
source('D:/USGS/Scripts/R/Required/SpeciesProcessing.R')
head(USDAexotic)
## Remove names without the special x character denoting hybrids
USDAexotic <- USDAexotic[!str_detect(string = USDAexotic$Scientific.Name, pattern = 'Ã-'),] # rolling count: 4120
# De-duplicate names
USDAexotic = USDAexotic[-which(duplicated(USDAexotic$Scientific.Name)), ] # count: 3774
# drop the 1 word names:
USDAexotic <- USDAexotic[str_count(USDAexotic$Scientific.Name, "\\s") != 0, ] # rolling count 4249
USDAexotic <- dat[grep('L48(I)', dat$Native.Status, fixed=TRUE),] # rolling count: 5100
# drop the 1 word names:
USDAexotic <- USDAexotic[str_count(USDAexotic$Scientific.Name, "\\s") != 0, ] # rolling count 4249
# drop all ssp and var. terms (only want Genus and species)
USDAexotic$Scientific.Name <- word(string = USDAexotic$Scientific.Name, start = 1, end = 2, sep = " ")
## Remove names without the special x character denoting hybrids
USDAexotic <- USDAexotic[!str_detect(string = USDAexotic$Scientific.Name, pattern = 'Ã-'),] # rolling count: 4120
# De-duplicate names
USDAexotic = USDAexotic[-which(duplicated(USDAexotic$Scientific.Name)), ] # count: 3774
head(USDAexotic)
install.packages(c("data.table", "devtools", "dplyr", "effects", "forecast", "gistr", "gmodels", "gtools", "haven", "highr", "htmlTable", "httpuv", "later", "leaflet", "munsell", "mvtnorm", "openxlsx", "ParamHelpers", "pillar", "plotrix", "polspline", "polyclip", "progress", "purrr", "quantreg", "Rcpp", "readstata13", "reprex", "rgdal", "rgeos", "RgoogleMaps", "ritis", "rjson", "rlang", "rmarkdown", "sf", "shiny", "sp", "spam", "spatstat", "spatstat.data", "spatstat.utils", "spData", "stringi", "tidyr", "tm", "tseries", "units", "utf8", "worrms", "zoo"))
cat(paste(letters, 100* 1:26), fill = TRUE, labels = paste0("{", 1:10, "}:"))
paste(letters, 100* 1:26), fill = TRUE, labels = paste0("{", 1:10, "}:")
load("~/SAHM_Outputs/20180719/vespersSparrow/rf_1/modelWorkspace")
out$input
out$input$ma.name
out$input$ma.name
out$input$make.p.tif
out$input$response.col
out$input$script.name
out$input$tif.dir
out$input$xtest
out$input$ytest
out$dat$input
install.packages(c("broom", "caTools", "crul", "dbplyr", "docopt", "dotCall64", "dplyr", "e1071", "EnvStats", "evaluate", "ggplot2", "git2r", "glue", "haven", "httpuv", "iterators", "maptools", "openssl", "pillar", "polyclip", "RANN", "Rcpp", "RcppArmadillo", "RCurl", "rebird", "rgbif", "rncl", "rredlist", "spatstat", "spatstat.utils", "spData", "splitstackshape", "spocc", "stringi", "taxize", "TH.data", "tinytex", "tm", "urltools", "XML", "xts", "yaImpute", "yaml", "zoo"))
install.packages("shiny")
install.packages("leaflet")
install.packages("flexdashboard")
install.packages("servr")
# Stop serving
servr::daemon_stop(deamon_id)
# Start serving working folder on port 8000 in daemon mode
deamon_id = servr::httd(port = 8000, daemon = TRUE)
# Start serving working folder on port 8000 in daemon mode
deamon_id = servr::httd(port = 8000, daemon = TRUE)
# Stop serving
servr::daemon_stop(deamon_id)
# Start serving working folder on port 8000 in daemon mode
deamon_id = servr::httd(port = 8000, daemon = TRUE)
# Stop serving
servr::daemon_stop(deamon_id)
# Start serving working folder on port 8000 in daemon mode
deamon_id = servr::httd(dir = '.',port = 8000, daemon = TRUE)
# Stop serving
servr::daemon_stop(deamon_id)
# Start serving working folder on port 8000 in daemon mode
deamon_id = servr::httd(dir = '~/USGS/FlexDashboards/RasterThresholding/',port = 8000, daemon = TRUE)
# Stop serving
servr::daemon_stop(deamon_id)
list.of.packages <- c("devtools","gsheet","jsonlite","rgdal","rgeos","ritis","scrubr",'spocc',"stringr","taxize","tidyverse")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
library(tidyverse)
setwd('~/GitHub/USGS_FORT/SpeciesOccurrenceData/')
install.packages(c("rgdal", "stringi", "urltools"))
list.of.packages <- c("devtools","gsheet","jsonlite","rgdal","rgeos","ritis","scrubr",'spocc',"stringr","taxize","tidyverse")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
library(tidyverse)
setwd('~/GitHub/USGS_FORT/SpeciesOccurrenceData/')
source('./SpeciesProcessing.R')
# sp_list = suppressWarnings(readLines('C:/Users/peder/Documents/USGS/Scripts/ShinyApps/FWS_Viz/fws_specieslist.txt'))
sp_list = c('Tamarix')
species_processing(sort(sp_list), USDA=T)
sp_df
# sp_list = suppressWarnings(readLines('C:/Users/peder/Documents/USGS/Scripts/ShinyApps/FWS_Viz/fws_specieslist.txt'))
sp_list = c('Tamarix', 'Elaeagnus angustifolia', 'Ulmus pumila')
species_processing(sort(sp_list), USDA=T)
sp_df
sort(species_search_list)
